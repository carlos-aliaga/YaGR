<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGhost0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oEnemigoBase</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
// Velocidad de animacion
    image_speed=0.5;

// Daño que reliza
    ataque = 20;
    
// Velocidad de movimiento
    velocidad = 3;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{               
    // Si el Player esta vivo
    if instance_exists(oPlayer){        
        // Corta distancia y visto
        if  distance_to_object(oPlayer) &lt;= MaxDistancia and
            !collision_line(x,y,oPlayer.x,oPlayer.y,oParedSolida,true,true) 
            {                       
                inst = instance_nearest(x, y, oPlayer);
                mp_potential_step(inst.x,inst.y,self.velocidad,false);
                //mp_potential_step(inst.x,inst.y,0.1,false);
                
                //action_linear_step(inst.x,inst.y,3,0);
                //action_potential_step(inst.x,inst.y,3,0);
                /*if place_meeting(x,y,oPlayer) {
                    instance_destroy();
                }*/
            }        
        else{   
            // No lo vé
            ranx = x - 160 + random(320);
            rany = y - 160 + random(320);              
            //mp_potential_step(ranx,rany,2,false);     
        }        
        
        // En cualquier caso, haremos un cambio de sprite segun la direccion 
        indice = round (abs(direction / 45 ));
        switch (indice)
           {
            case 0:
            case 8: // No deberia ser necesario, pero....
                if(sprite_index!=sGhost0) {
                    sprite_index=sGhost0;
                    image_index=choose(0,1,2);                    
                }
            break;            
            case 1:
                if(sprite_index!=sGhost1) {
                    sprite_index=sGhost1;
                    image_index=choose(0,1,2);                    
                }
            break;  
            case 2:
                if(sprite_index!=sGhost2) {
                    sprite_index=sGhost2;
                    image_index=choose(0,1,2);                    
                }
            break; 
            case 3:
                if(sprite_index!=sGhost3) {
                    sprite_index=sGhost3;
                    image_index=choose(0,1,2);                    
                }
            break;
            case 4:
                if(sprite_index!=sGhost4) {
                    sprite_index=sGhost4;
                    image_index=choose(0,1,2);                    
                }
            break;
            case 5:
                if(sprite_index!=sGhost5) {
                    sprite_index=sGhost5;
                    image_index=choose(0,1,2);                    
                }
            break;
            case 6:
                if(sprite_index!=sGhost6) {
                    sprite_index=sGhost6;
                    image_index=choose(0,1,2);                    
                }
            break;
            case 7:
                if(sprite_index!=sGhost7) {
                    sprite_index=sGhost7;
                    image_index=choose(0,1,2);                    
                }
            break;          
           }
        image_speed=0.15;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oFantasma">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a=0

var i;
i = point_direction(other.x, other.y, x, y);
x += lengthdir_x(2, i);
y += lengthdir_y(2, i);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oGenerador1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>a=0

var i;
i = point_direction(other.x, other.y, x, y);
x += lengthdir_x(2, i);
y += lengthdir_y(2, i);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oParedSolida">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
i = point_direction(other.x, other.y, x, y);
x += lengthdir_x(2, i);
y += lengthdir_y(2, i);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

// Daña al heroe, segun el daño que tenga el enemigo
    global.Salud = global.Salud - self.ataque;

// Actualiza mapa de enemigos y destruye la instancia
    with(self) {
        amount = ds_map_find_value(global.mapaSpawn, generador); 
        amount--;
        ds_map_replace(global.mapaSpawn, generador, amount);
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>9,9</point>
    <point>9,9</point>
  </PhysicsShapePoints>
</object>
